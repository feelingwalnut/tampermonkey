// ==UserScript==
// @name         walmart
// @namespace    http://tampermonkey.net/
// @version      1.3
// @description  Convert weights from ounces to pounds and prices per ounce to prices per pound on Walmart pages
// @author       Your Name
// @match        *://www.walmart.com/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    // Helper function to convert ounces to pounds
    function convertOuncesToPounds(ounces) {
        return (ounces / 16).toFixed(2);
    }

    // Helper function to convert price per ounce to price per pound in dollars
    function convertPricePerOunceToPricePerPound(pricePerOunce) {
        return (pricePerOunce * 16).toFixed(2);
    }

    // Function to update the prices per ounce to per pound
    function updatePrices() {
        // Select specific elements that contain price information in cents per ounce
        let priceElements = document.querySelectorAll('div[data-automation-id="product-price"] > div.gray');

        priceElements.forEach(element => {
            let priceText = element.innerText.match(/(\d+\.?\d*)\s?¢\/oz/);
            if (priceText) {
                let pricePerOunce = parseFloat(priceText[1]); // Price in cents per ounce
                let pricePerPound = convertPricePerOunceToPricePerPound(pricePerOunce);

                // Convert price per pound from cents to dollars
                pricePerPound = (pricePerPound / 100).toFixed(2);

                // Update the price text directly
                element.innerHTML = element.innerHTML.replace(/(\d+\.?\d*)\s?¢\/oz/, `$${pricePerPound}/lb`);

                // Apply important CSS
                element.style.setProperty('color', 'red', 'important');
            }
        });
    }

    // Function to update the weights from ounces to pounds
    function updateWeights() {
        // Select specific elements that contain weight information in ounces
        let weightElements = document.querySelectorAll('span[data-automation-id="product-title"]');

        weightElements.forEach(element => {
            let weightText = element.innerText.match(/(\d+\.?\d*)\s?oz/);
            if (weightText) {
                let ounces = parseFloat(weightText[1]);
                let pounds = convertOuncesToPounds(ounces);

                // Update the weight text directly
                element.innerText = element.innerText.replace(/(\d+\.?\d*)\s?oz/, `${pounds} lbs`);

                // Apply important CSS
                element.style.setProperty('color', 'red', 'important');
            }
        });
    }

    // Function to debounce the updatePage function
    function debounce(func, timeout) {
        let timer;
        return function() {
            clearTimeout(timer);
            timer = setTimeout(func, timeout);
        };
    }

    // Function to update the prices and weights on the page
    function updatePage() {
        updatePrices();
        updateWeights();
    }

    // Run the function when the page loads
    window.addEventListener('load', updatePage);

    // Debounced mutation observer to observe changes in the body
    let debouncedUpdate = debounce(() => {
        updatePage();
    }, 500); // Adjust debounce timeout as needed (500ms in this example)

    let observer = new MutationObserver(debouncedUpdate);
    observer.observe(document.body, { childList: true, subtree: true });

})();
